<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="_enemy_projectile_8cs" kind="file" language="C#">
    <compoundname>EnemyProjectile.cs</compoundname>
    <innerclass refid="class_projectaile_1_1_enemy_projectile" prot="public">Projectaile::EnemyProjectile</innerclass>
    <innernamespace refid="namespace_projectaile">Projectaile</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_interface" kindref="compound">Interface</ref>;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">UnityEngine;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_projectaile" kindref="compound">Projectaile</ref></highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9" refid="class_projectaile_1_1_enemy_projectile" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_projectaile_1_1_enemy_projectile" kindref="compound">EnemyProjectile</ref><sp/>:<sp/><ref refid="class_projectaile_1_1_projectile" kindref="compound">Projectile</ref></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_projectaile_1_1_enemy_projectile_1a6c6630ad23ed2449c5f8735d67cecc97" kindref="member">Fire</ref>(Quaternion<sp/>rotation,<sp/>Vector3<sp/>position,<sp/>Vector3<sp/>velocity,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_projectaile_1_1_projectile_1aea0dbb373bd8d0ff4f8444621524e9c7" kindref="member">bonusDamage</ref><sp/>=0f<sp/>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bonusSpeed<sp/>=0f)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_projectaile_1_1_projectile_1a085a3d99ff3594ed5fa5b35bfc56d4e1" kindref="member">ResetProjectile</ref>();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_projectaile_1_1_enemy_projectile_1a8a5f8491ac681a5dafb579c8c1b08cd1" kindref="member">SetProjectileParameters</ref>(rotation,<sp/>position,<sp/>velocity,<sp/><ref refid="class_projectaile_1_1_projectile_1aea0dbb373bd8d0ff4f8444621524e9c7" kindref="member">bonusDamage</ref>,<sp/>bonusSpeed);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.gameObject.SetActive(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_projectaile_1_1_enemy_projectile_1af002fac78c74c503524f3951efe6b109" kindref="member">OnHit</ref>(Collision<sp/>collision)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interface_interface_1_1_i_damage" kindref="compound">IDamage</ref><sp/>objectInterface<sp/>=<sp/>collision.gameObject.GetComponent&lt;<ref refid="interface_interface_1_1_i_damage" kindref="compound">IDamage</ref>&gt;();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objectInterface?.<ref refid="interface_interface_1_1_i_damage_1a3ee1cd807b1eb84b155d1e2deeffdcb2" kindref="member">TakeDamage</ref>(this.<ref refid="class_projectaile_1_1_projectile_1a7dbb111c64fc75d1f6d81e7fc241880b" kindref="member">BaseDamage</ref><sp/>+<sp/>this.<ref refid="class_projectaile_1_1_projectile_1aea0dbb373bd8d0ff4f8444621524e9c7" kindref="member">bonusDamage</ref>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_projectaile_1_1_projectile_1a150ed3816ccc67f4ae44b3bef1b762ae" kindref="member">QueReturnEvents</ref>.ReturnToQue?.Invoke(<ref refid="class_projectaile_1_1_projectile_1a1bb7f45c0ae3f2527482c9ae7b0b0208" kindref="member">thisProjectile</ref>,<sp/>this.<ref refid="class_projectaile_1_1_projectile_1ac09d12b4cae2915efb5b284b85228452" kindref="member">ThisType</ref>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_projectaile_1_1_enemy_projectile_1a8a5f8491ac681a5dafb579c8c1b08cd1" kindref="member">SetProjectileParameters</ref>(Quaternion<sp/>rotation,<sp/>Vector3<sp/>position,<sp/>Vector3<sp/>velocity,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_projectaile_1_1_projectile_1aea0dbb373bd8d0ff4f8444621524e9c7" kindref="member">bonusDamage</ref><sp/>=0f<sp/>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bonusSpeed<sp/>=0f)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.bonusDamage<sp/>=<sp/><ref refid="class_projectaile_1_1_projectile_1aea0dbb373bd8d0ff4f8444621524e9c7" kindref="member">bonusDamage</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.transform.rotation<sp/>=<sp/>rotation;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.transform.position<sp/>=<sp/>position<sp/>+<sp/>(velocity);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.ProjectileRigidbody.velocity<sp/>=<sp/>(velocity<sp/>*<sp/>(this.BaseSpeed<sp/>*<sp/>bonusSpeed));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/UnityProj/inzynierka/inzynierka/Assets/Scripts/Projectaile/EnemyProjectile.cs"/>
  </compounddef>
</doxygen>
